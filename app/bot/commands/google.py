import os  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π (—É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤)
import matplotlib.pyplot as plt  # –î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
import matplotlib.dates as mdates  # –î–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç –Ω–∞ –æ—Å–∏ X
from pytrends.request import TrendReq  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Trends API —á–µ—Ä–µ–∑ pytrends
import aiohttp  # –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
from aiogram import types  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö Telegram
from aiogram.filters import Command  # –î–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥
from aiogram.types import Message, FSInputFile  # –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
from bot import dp  # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
from app.database.crud import get_user_language  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ pytrends —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —è–∑—ã–∫–∞
def initialize_pytrends(language='en-US'):
    return TrendReq(hl=language, tz=360)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Google Trends –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
def get_google_trends(keyword, language='en-US'):
    pytrends = initialize_pytrends(language=language)
    pytrends.build_payload([keyword], cat=0, timeframe='today 12-m', geo='', gprop='')

    data = pytrends.interest_over_time()

    if data.empty:
        return None

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
    plt.figure(figsize=(12, 6))
    plt.plot(data.index, data[keyword], label=keyword, color='blue', linewidth=2)
    plt.title(f"Interest over time for '{keyword}'" if language.startswith('en') else f"–ò–Ω—Ç–µ—Ä–µ—Å —Å —Ç–µ—á–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{keyword}'", fontsize=16)
    plt.legend()
    plt.xlabel('Date' if language.startswith('en') else '–î–∞—Ç–∞', fontsize=12)
    plt.ylabel('Interest' if language.startswith('en') else '–ò–Ω—Ç–µ—Ä–µ—Å', fontsize=12)

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–∏ X –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Å—è—Ü–µ–≤
    ax = plt.gca()
    ax.xaxis.set_major_locator(mdates.MonthLocator(interval=1))  # –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü
    ax.xaxis.set_major_formatter(mdates.DateFormatter('%b %Y'))  # –§–æ—Ä–º–∞—Ç: 'Jan 2023'

    plt.xticks(rotation=45)  # –ü–æ–≤–æ—Ä–æ—Ç –º–µ—Ç–æ–∫ –¥–∞—Ç—ã –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    plt.grid(True)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–∏

    plt.tight_layout()  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
    chart_path = 'google_trends.png'
    plt.savefig(chart_path)
    plt.close()

    return chart_path


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /google
@dp.message(Command(commands=['google']))
async def send_google_trends(message: Message):
    try:
        # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        language = get_user_language(message.from_user.id)  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è
        is_russian = (language == 'ru')

        # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–µ–≤—É—é —Ñ—Ä–∞–∑—É –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        query = message.text[len('/google'):].strip()
        if not query:
            if is_russian:
                await message.reply("‚ùóÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: /google Bitcoin price")
            else:
                await message.reply("‚ùóÔ∏è Please enter keywords for search after the command. For example: /google Bitcoin price")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á–µ–≤–∞—è —Ñ—Ä–∞–∑–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã (–±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã)
        if not all(c.isalnum() or c.isspace() for c in query):
            if is_russian:
                await message.reply("‚ùóÔ∏è –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –ø—Ä–æ–±–µ–ª—ã.")
            else:
                await message.reply("‚ùóÔ∏è Keywords must contain only letters, numbers, and spaces.")
            return

        keyword = query
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫
        chart_path = get_google_trends(keyword, language='ru-RU' if is_russian else 'en-US')

        if chart_path:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
            caption = "Google Trends üìä"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
            await message.answer_photo(FSInputFile(chart_path), caption=caption)

            # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            os.remove(chart_path)
        else:
            if is_russian:
                await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –≤–≤–µ–¥—ë–Ω–Ω—ã–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.")
            else:
                await message.reply("‚ùå Failed to retrieve data for the specified keywords.")
            return

    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω—É–∂–Ω–æ–º —è–∑—ã–∫–µ
        error_message = (
            "‚ö†Ô∏è An error occurred while fetching Google Trends data. Please try again later." if not is_russian
            else "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö Google Trends. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        await message.reply(error_message)
        print(f"–û—à–∏–±–∫–∞: {e}")


