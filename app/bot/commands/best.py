import aiohttp  # –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
import random  # –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —ç–º–æ–¥–∑–∏
from aiogram import types  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö Telegram
from aiogram.filters import Command  # –î–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥
from aiogram.types import Message  # –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram
from bot import dp  # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
from config import settings  # –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫, –≤–∫–ª—é—á–∞—è API –∫–ª—é—á–∏


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö —á–µ—Ä–µ–∑ API CryptoCompare
async def fetch_best_cryptos():
    url = "https://min-api.cryptocompare.com/data/top/mktcapfull"
    params = {
        'limit': 100,  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø-–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        'tsym': 'USD',
        'api_key': settings.crypto_api_key  # –ò—Å–ø–æ–ª—å–∑—É–µ–º API-–∫–ª—é—á –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    }

    async with aiohttp.ClientSession() as session:
        async with session.get(url, params=params) as response:
            if response.status == 200:
                data = await response.json()
                cryptos = data['Data']

                # –§–∏–ª—å—Ç—Ä—É–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã —Å –∏–º–µ—é—â–∏–º—Å—è –∫–ª—é—á–æ–º 'CHANGEPCT24HOUR' –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –µ–≥–æ –≤ —á–∏—Å–ª–æ
                valid_cryptos = [
                    crypto for crypto in cryptos
                    if 'DISPLAY' in crypto and 'USD' in crypto['DISPLAY'] and 'CHANGEPCT24HOUR' in crypto['DISPLAY']['USD']
                ]

                # –û—Ç–±–∏—Ä–∞–µ–º 5 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ü–µ–Ω—ã –∑–∞ 24 —á–∞—Å–∞
                best_cryptos = sorted(
                    valid_cryptos,
                    key=lambda x: float(x['DISPLAY']['USD']['CHANGEPCT24HOUR']),
                    reverse=True
                )[:5]

                return best_cryptos
            else:
                raise Exception(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {response.status}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /best –∏–ª–∏ /–ª—É—á—à–∏–µ
@dp.message(Command(commands=['best']))
async def send_best_cryptos(message: Message):
    try:
        # –ù–∞–±–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è —Ç–µ–∫—Å—Ç–∞
        emojis = ["üìà", "üöÄ", "üíπ", "üìä", "üí∞", "üéâ"]

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ª—É—á—à–∏—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö
        best_cryptos = await fetch_best_cryptos()

        if best_cryptos:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            best_message = f"Gainers in Top 100 (24h) {random.choice(emojis)}\n"
            for crypto in best_cryptos:
                coin_info = crypto['CoinInfo']
                display_info = crypto['DISPLAY']['USD']

                name = coin_info['FullName']
                symbol = coin_info['Name']
                price = display_info['PRICE']
                change = f"{display_info['CHANGEPCT24HOUR']}%"
                best_message += f"{name} - ${symbol} | {change} {random.choice(emojis)}\n{price}\n"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await message.answer(best_message)
        else:
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö.")

    except Exception as e:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö.")
        print(f"–û—à–∏–±–∫–∞: {e}")
