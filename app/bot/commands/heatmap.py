import os  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π (—É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤)
import time  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ (time.sleep)
from selenium import webdriver  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å Selenium WebDriver
from selenium.webdriver.chrome.service import Service  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª—É–∂–±—ã ChromeDriver
from selenium.webdriver.common.by import By  # –î–ª—è –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
from selenium.webdriver.chrome.options import Options  # –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ü–∏–π Chrome
from aiogram import types  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö Telegram
from aiogram.filters import Command  # –î–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥
from aiogram.types import Message, FSInputFile  # –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
from bot import dp  # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
from app.database.crud import get_user_language  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
import asyncio  # –î–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
import logging  # –î–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Selenium WebDriver setup
def get_heatmap_screenshot():
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--window-size=1920,1080")

    # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—É—Ç–∏ –∫ chromedriver
    chromedriver_path = os.getenv('CHROMEDRIVER_PATH', 'C:/chromedriver/chromedriver.exe')
    service = Service(chromedriver_path)  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É chromedriver
    driver = webdriver.Chrome(service=service, options=chrome_options)

    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≤–∏–¥–∂–µ—Ç–æ–º
        driver.get("https://coin360.com/widget/map?utm_source=embed_map")
        time.sleep(5)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

        # –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –≤–∏–¥–∂–µ—Ç–∞ –ø–æ –µ–≥–æ CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä—É –∏ –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
        element = driver.find_element(By.CSS_SELECTOR, "body")
        element_png = element.screenshot_as_png

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
        with open("heatmap.png", "wb") as file:
            file.write(element_png)

    finally:
        driver.quit()

    return "heatmap.png"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /heatmap –∏ /—Ç–µ–ø–ª–æ–≤–∞—è_–∫–∞—Ä—Ç–∞
@dp.message(Command(commands=['heatmap']))
async def send_heatmap(message: Message):
    try:
        # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        language = get_user_language(message.from_user.id)  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è
        is_russian = (language == 'ru')

        # –ó–∞–ø—É—Å–∫ –±–ª–æ–∫–∏—Ä—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        heatmap_path = await asyncio.to_thread(get_heatmap_screenshot)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —è–∑—ã–∫–∞
        caption = "üìà **Cryptocurrency Heatmap**" if not is_russian else "üìà **–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç**"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é
        await message.answer_photo(FSInputFile(heatmap_path), caption=caption, parse_mode="Markdown")

        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        os.remove(heatmap_path)

    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω—É–∂–Ω–æ–º —è–∑—ã–∫–µ
        if 'is_russian' in locals() and is_russian:
            await message.reply("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ —Ç–µ–ø–ª–æ–≤–æ–π –∫–∞—Ä—Ç—ã.")
        else:
            await message.reply("‚ö†Ô∏è An error occurred while generating the heatmap.")
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
